# Generated by Django 3.2.25 on 2024-10-15 09:31

import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import xabber_server_panel.base_modules.users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.CharField(choices=[('read', 'read'), ('write', 'write')], max_length=10)),
                ('app', models.CharField(choices=[('dashboard', 'Dashboard'), ('users', 'Users'), ('circles', 'Circles'), ('groups', 'Groups'), ('registration', 'Registration'), ('config', 'Settings'), ('log', 'Log')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=256, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()])),
                ('password', models.CharField(max_length=128, null=True)),
                ('auth_backend', models.CharField(blank=True, choices=[('sql', 'sql'), ('ldap', 'LDAP')], default='sql', max_length=128)),
                ('is_admin', models.BooleanField(default=False)),
                ('host', models.CharField(max_length=256)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACTIVE', 'ACTIVE'), ('BANNED', 'BANNED'), ('EXPIRED', 'EXPIRED'), ('BLOCKED', 'BLOCKED')], default='ACTIVE', max_length=255)),
                ('reason', models.TextField(blank=True, null=True, verbose_name='reason for blocking')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('permissions', models.ManyToManyField(blank=True, to='users.CustomPermission')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('username', 'host')},
            },
            managers=[
                ('objects', xabber_server_panel.base_modules.users.models.UserManager()),
            ],
        ),
    ]
